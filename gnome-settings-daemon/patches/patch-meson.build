$NetBSD: patch-meson.build,v 1.1 2020/11/10 01:21:24 nia Exp $

Install config files to examples.

--- meson.build.orig	2021-04-14 14:55:00.460781800 +0000
+++ meson.build
@@ -23,7 +23,7 @@ gsd_includedir = join_paths(gsd_prefix,
 gsd_libdir = join_paths(gsd_prefix, get_option('libdir'))
 gsd_libexecdir = join_paths(gsd_prefix, get_option('libexecdir'))
 gsd_localedir = join_paths(gsd_prefix, get_option('localedir'))
-gsd_sysconfdir = join_paths(gsd_prefix, get_option('sysconfdir'))
+gsd_sysconfdir = join_paths(gsd_prefix, get_option('datadir'), 'examples')
 
 gsd_pkgdatadir = join_paths(gsd_datadir, meson.project_name())
 gsd_pkgincludedir = join_paths(gsd_includedir, gsd_api_name)
@@ -84,7 +84,7 @@ endif
 
 # Workaround for meson's bug
 # https://github.com/mesonbuild/meson/pull/1896
-if get_option('b_ndebug') == true
+if get_option('b_ndebug') == 'true'
   common_flags += ['-DG_DISABLE_ASSERT']
 endif
 
@@ -156,7 +156,7 @@ endif
 config_h.set10('HAVE_WAYLAND', enable_wayland)
 
 # wacom (disabled for s390/s390x and non Linux platforms)
-enable_wacom = host_is_linux_not_s390
+enable_wacom = false #host_is_linux_not_s390
 if enable_wacom
   assert(enable_gudev, 'GUDev support is required for wacom support.')
   libwacom_dep = dependency('libwacom', version: '>= 0.7')
@@ -198,7 +198,7 @@ endif
 
 # Rfkill
 enable_rfkill = get_option('rfkill')
-assert(enable_rfkill or not host_is_linux, 'rfkill is not optional on Linux platforms')
+#assert(enable_rfkill or not host_is_linux, 'rfkill is not optional on Linux platforms')
 if enable_rfkill
   assert(cc.has_header('linux/rfkill.h'), 'rfkill support requested but RFKill headers not found')
   assert(enable_gudev, 'GUdev is required for rfkill support')
@@ -218,7 +218,7 @@ endif
 
 # Sharing plugin
 enable_network_manager = get_option('network_manager')
-assert(enable_network_manager or not host_is_linux, 'NetworkManager support is not optional on Linux platforms')
+#assert(enable_network_manager or not host_is_linux, 'NetworkManager support is not optional on Linux platforms')
 if enable_network_manager
   # network manager
   libnm_dep = dependency('libnm', version: '>= 1.0')
