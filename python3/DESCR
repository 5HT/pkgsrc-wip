Python is an interpreted, interactive, object-oriented
programming language that combines remarkable power with
very clear syntax. For an introduction to programming in
Python you are referred to the Python Tutorial. The
Python Library Reference documents built-in and standard
types, constants, functions and modules. Finally, the
Python Reference Manual describes the syntax and semantics
of the core language in (perhaps too) much detail.

Python's basic power can be extended with your own modules
written in C or C++. On most systems such modules may be
dynamically loaded. Python is also adaptable as an exten-
sion language for existing applications. See the internal
documentation for hints.

This is a wrapper package for installing the default python 3
version and links to bin/python3 and bin/python, for running
python scripts not installed by pkgsrc, but using pkgsrc python.

Currently, pkg_alternatives does not seem to have the ability
to keep python and python3 linked to the default python version.
Instead, it links to the latest installed version.  This causes
python scripts using #!/usr/bin/env python or #!/usr/bin/python3
(i.e. scripts not installed by pkgsrc) to suddenly stop working
when a python newer than the default is installed, because they
cannot find modules installed by pkgsrc using the default version.
pkg_altneratives has the ability to lock the links to a specific
version, but this causes breakage when the default version changes
and packages are updated.

This wrapper package solves these problems by keeping bin/python
and bin/python3 linked to the default python version at all times.
