--- meson.build.orig	2020-12-12 12:11:34.042032700 -0800
+++ meson.build	2020-12-22 18:42:21.787942427 -0800
@@ -96,6 +96,7 @@
 os_darwin = false
 os_gnu = false
 os_freebsd = false
+os_netbsd = false
 os_windows = false
 bin_suffix = ''
 lib_suffix = '.so'
@@ -107,6 +108,8 @@
   os_gnu = true
 elif host_machine.system() == 'freebsd'
   os_freebsd = true
+elif host_machine.system() == 'netbsd'
+  os_netbsd = true
 elif host_machine.system() == 'windows'
   os_windows = true
   bin_suffix = '.exe'
@@ -312,7 +315,7 @@
 endif
 
 # find command to open a directory
-if os_gnu or os_freebsd
+if os_gnu or os_freebsd or os_netbsd
   open_dir_cmd = find_program ('xdg-open').full_path ()
 elif os_darwin
   open_dir_cmd = 'open'
@@ -502,7 +505,7 @@
 common_cflags = cc.get_supported_arguments (
   test_cflags)
 
-if os_freebsd
+if os_freebsd or os_netbsd
   common_cflags += [
     '-I' + includedir,
     ]
@@ -611,7 +614,7 @@
 common_ldflags = cc.get_supported_link_arguments (
   test_ldflags)
 
-if os_freebsd
+if os_freebsd or os_netbsd
   common_ldflags += [
     '-L' + libdir,
     '-lexecinfo',
@@ -709,16 +712,16 @@
     'fftw3f_threads', required: false,
     static: all_static),
   ]
-if os_darwin or os_freebsd
+if os_darwin or os_freebsd or os_netbsd
   fftw3_deps += [
     cc.find_library (
       'fftw3_threads', required: true,
       static: all_static,
-      dirs: [ '/usr/lib', '/usr/local/lib' ]),
+      dirs: [ '/usr/lib', '/usr/local/lib', '/usr/pkg/lib' ]), # XXX hardcoded PREFIX
     cc.find_library (
       'fftw3f_threads', required: true,
       static: all_static,
-      dirs: [ '/usr/lib', '/usr/local/lib' ])
+      dirs: [ '/usr/lib', '/usr/local/lib', '/usr/pkg/lib' ]) # XXX hardcoded PREFIX
     ]
 else
   fftw3_deps += [
@@ -838,7 +841,7 @@
     carla_bridge = find_program (
         carla_bins_dir / 'carla-bridge-' + bridge_type,
         required: false)
-    if carla_bridge.found() and (os_gnu or os_freebsd)
+    if carla_bridge.found() and (os_gnu or os_freebsd or os_netbsd)
       cdata.set('HAVE_CARLA_BRIDGE_' + bridge_type.underscorify().to_upper(), 1)
       install_data (
         carla_bridge.full_path(),
@@ -953,7 +956,6 @@
   dependency (
     'rubberband'),
   dependency ('libpcre'),
-  cc.find_library ('dl', static: all_static),
   lv2_dep,
   chromaprint_dep,
   fftw3_deps,
@@ -963,6 +965,12 @@
   libm,
 ]
 
+if not os_netbsd
+  zrythm_deps += [
+    cc.find_library ('dl', static: all_static)
+  ]
+endif
+
 if all_static
   zrythm_deps += [
     # provided by bzip2
