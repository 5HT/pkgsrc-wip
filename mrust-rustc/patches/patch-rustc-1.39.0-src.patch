$NetBSD$

--- rustc-1.39.0-src.patch.orig	2021-09-12 00:15:52.000000000 +0000
+++ rustc-1.39.0-src.patch
@@ -95,3 +95,54 @@ index da9d9d5bfdc0..3d47471f0ef0 100644
 #+//#[cfg(target_arch = "x86_64")]
 #+//static_assert_size!(Const<'_>, 40);
 
+##########
+####
+# DLB's additions
+####
+--- ./src/librustc/hir/mod.rs.orig	2019-11-04 10:45:21.000000000 -0500
++++ ./src/librustc/hir/mod.rs	2021-09-19 05:57:02.354311624 -0400
+@@ -1413,7 +1413,7 @@
+ 
+ // `Expr` is used a lot. Make sure it doesn't unintentionally get bigger.
+ #[cfg(target_arch = "x86_64")]
+-static_assert_size!(Expr, 72);
++//DLB commented//static_assert_size!(Expr, 72);
+ 
+ impl Expr {
+     pub fn precedence(&self) -> ExprPrecedence {
+--- ./src/librustc/ty/sty.rs.orig	2019-11-04 10:45:21.000000000 -0500
++++ ./src/librustc/ty/sty.rs	2021-09-19 05:53:20.696595361 -0400
+@@ -2256,7 +2256,7 @@
+ }
+ 
+ #[cfg(target_arch = "x86_64")]
+-static_assert_size!(Const<'_>, 40);
++//DLB commented out//static_assert_size!(Const<'_>, 40);
+ 
+ impl<'tcx> Const<'tcx> {
+     #[inline]
+--- ./src/librustc/mir/interpret/value.rs.orig	2019-11-04 10:45:21.000000000 -0500
++++ ./src/librustc/mir/interpret/value.rs	2021-09-19 06:01:16.436347256 -0400
+@@ -107,7 +107,7 @@
+ }
+ 
+ #[cfg(target_arch = "x86_64")]
+-static_assert_size!(Scalar, 24);
++//DLB commented//static_assert_size!(Scalar, 24);
+ 
+ impl<Tag: fmt::Debug, Id: fmt::Debug> fmt::Debug for Scalar<Tag, Id> {
+     fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {
+--- ./src/libsyntax/ast.rs.orig	2019-11-04 10:45:21.000000000 -0500
++++ ./src/libsyntax/ast.rs	2021-09-19 05:42:10.925002154 -0400
+@@ -984,7 +984,7 @@
+ 
+ // `Expr` is used a lot. Make sure it doesn't unintentionally get bigger.
+ #[cfg(target_arch = "x86_64")]
+-static_assert_size!(Expr, 96);
++//DLB commented// static_assert_size!(Expr, 96);
+ 
+ impl Expr {
+     /// Returns `true` if this expression would be valid somewhere that expects a value;
+
+
+##########
